/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// Int64SliceApplyConfiguration represents an declarative configuration of the Int64Slice type for use
// with apply.
type Int64SliceApplyConfiguration struct {
	Ints []int64 `json:",inline"`
}

// Int64SliceApplyConfiguration constructs an declarative configuration of the Int64Slice type for use with
// apply.
func Int64Slice() *Int64SliceApplyConfiguration {
	return &Int64SliceApplyConfiguration{}
}

// WithInts adds the given value to the Ints field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Ints field.
func (b *Int64SliceApplyConfiguration) WithInts(values ...int64) *Int64SliceApplyConfiguration {
	for i := range values {
		b.Ints = append(b.Ints, values[i])
	}
	return b
}
