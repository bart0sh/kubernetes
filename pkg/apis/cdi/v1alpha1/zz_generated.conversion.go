//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1alpha1 "k8s.io/api/cdi/v1alpha1"
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	cdi "k8s.io/kubernetes/pkg/apis/cdi"
	core "k8s.io/kubernetes/pkg/apis/core"
	corev1 "k8s.io/kubernetes/pkg/apis/core/v1"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.AllocationResult)(nil), (*cdi.AllocationResult)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AllocationResult_To_cdi_AllocationResult(a.(*v1alpha1.AllocationResult), b.(*cdi.AllocationResult), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.AllocationResult)(nil), (*v1alpha1.AllocationResult)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_AllocationResult_To_v1alpha1_AllocationResult(a.(*cdi.AllocationResult), b.(*v1alpha1.AllocationResult), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.DriverSchedulingStatus)(nil), (*cdi.DriverSchedulingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DriverSchedulingStatus_To_cdi_DriverSchedulingStatus(a.(*v1alpha1.DriverSchedulingStatus), b.(*cdi.DriverSchedulingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.DriverSchedulingStatus)(nil), (*v1alpha1.DriverSchedulingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_DriverSchedulingStatus_To_v1alpha1_DriverSchedulingStatus(a.(*cdi.DriverSchedulingStatus), b.(*v1alpha1.DriverSchedulingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ResourceClaim)(nil), (*cdi.ResourceClaim)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ResourceClaim_To_cdi_ResourceClaim(a.(*v1alpha1.ResourceClaim), b.(*cdi.ResourceClaim), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.ResourceClaim)(nil), (*v1alpha1.ResourceClaim)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_ResourceClaim_To_v1alpha1_ResourceClaim(a.(*cdi.ResourceClaim), b.(*v1alpha1.ResourceClaim), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ResourceClaimList)(nil), (*cdi.ResourceClaimList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ResourceClaimList_To_cdi_ResourceClaimList(a.(*v1alpha1.ResourceClaimList), b.(*cdi.ResourceClaimList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.ResourceClaimList)(nil), (*v1alpha1.ResourceClaimList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_ResourceClaimList_To_v1alpha1_ResourceClaimList(a.(*cdi.ResourceClaimList), b.(*v1alpha1.ResourceClaimList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ResourceClaimStatus)(nil), (*cdi.ResourceClaimStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ResourceClaimStatus_To_cdi_ResourceClaimStatus(a.(*v1alpha1.ResourceClaimStatus), b.(*cdi.ResourceClaimStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.ResourceClaimStatus)(nil), (*v1alpha1.ResourceClaimStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_ResourceClaimStatus_To_v1alpha1_ResourceClaimStatus(a.(*cdi.ResourceClaimStatus), b.(*v1alpha1.ResourceClaimStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ResourceClass)(nil), (*cdi.ResourceClass)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ResourceClass_To_cdi_ResourceClass(a.(*v1alpha1.ResourceClass), b.(*cdi.ResourceClass), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.ResourceClass)(nil), (*v1alpha1.ResourceClass)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_ResourceClass_To_v1alpha1_ResourceClass(a.(*cdi.ResourceClass), b.(*v1alpha1.ResourceClass), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ResourceClassList)(nil), (*cdi.ResourceClassList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ResourceClassList_To_cdi_ResourceClassList(a.(*v1alpha1.ResourceClassList), b.(*cdi.ResourceClassList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.ResourceClassList)(nil), (*v1alpha1.ResourceClassList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_ResourceClassList_To_v1alpha1_ResourceClassList(a.(*cdi.ResourceClassList), b.(*v1alpha1.ResourceClassList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.SchedulerSchedulingStatus)(nil), (*cdi.SchedulerSchedulingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SchedulerSchedulingStatus_To_cdi_SchedulerSchedulingStatus(a.(*v1alpha1.SchedulerSchedulingStatus), b.(*cdi.SchedulerSchedulingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.SchedulerSchedulingStatus)(nil), (*v1alpha1.SchedulerSchedulingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_SchedulerSchedulingStatus_To_v1alpha1_SchedulerSchedulingStatus(a.(*cdi.SchedulerSchedulingStatus), b.(*v1alpha1.SchedulerSchedulingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.SchedulingStatus)(nil), (*cdi.SchedulingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SchedulingStatus_To_cdi_SchedulingStatus(a.(*v1alpha1.SchedulingStatus), b.(*cdi.SchedulingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*cdi.SchedulingStatus)(nil), (*v1alpha1.SchedulingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_cdi_SchedulingStatus_To_v1alpha1_SchedulingStatus(a.(*cdi.SchedulingStatus), b.(*v1alpha1.SchedulingStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_AllocationResult_To_cdi_AllocationResult(in *v1alpha1.AllocationResult, out *cdi.AllocationResult, s conversion.Scope) error {
	out.Attributes = *(*map[string]string)(unsafe.Pointer(&in.Attributes))
	out.AvailableOnNodes = (*core.NodeSelector)(unsafe.Pointer(in.AvailableOnNodes))
	out.UserLimit = int(in.UserLimit)
	return nil
}

// Convert_v1alpha1_AllocationResult_To_cdi_AllocationResult is an autogenerated conversion function.
func Convert_v1alpha1_AllocationResult_To_cdi_AllocationResult(in *v1alpha1.AllocationResult, out *cdi.AllocationResult, s conversion.Scope) error {
	return autoConvert_v1alpha1_AllocationResult_To_cdi_AllocationResult(in, out, s)
}

func autoConvert_cdi_AllocationResult_To_v1alpha1_AllocationResult(in *cdi.AllocationResult, out *v1alpha1.AllocationResult, s conversion.Scope) error {
	out.Attributes = *(*map[string]string)(unsafe.Pointer(&in.Attributes))
	out.AvailableOnNodes = (*v1.NodeSelector)(unsafe.Pointer(in.AvailableOnNodes))
	out.UserLimit = int64(in.UserLimit)
	return nil
}

// Convert_cdi_AllocationResult_To_v1alpha1_AllocationResult is an autogenerated conversion function.
func Convert_cdi_AllocationResult_To_v1alpha1_AllocationResult(in *cdi.AllocationResult, out *v1alpha1.AllocationResult, s conversion.Scope) error {
	return autoConvert_cdi_AllocationResult_To_v1alpha1_AllocationResult(in, out, s)
}

func autoConvert_v1alpha1_DriverSchedulingStatus_To_cdi_DriverSchedulingStatus(in *v1alpha1.DriverSchedulingStatus, out *cdi.DriverSchedulingStatus, s conversion.Scope) error {
	out.SuitableNodes = (*core.NodeSelector)(unsafe.Pointer(in.SuitableNodes))
	out.UnsuitableNodes = *(*[]string)(unsafe.Pointer(&in.UnsuitableNodes))
	return nil
}

// Convert_v1alpha1_DriverSchedulingStatus_To_cdi_DriverSchedulingStatus is an autogenerated conversion function.
func Convert_v1alpha1_DriverSchedulingStatus_To_cdi_DriverSchedulingStatus(in *v1alpha1.DriverSchedulingStatus, out *cdi.DriverSchedulingStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_DriverSchedulingStatus_To_cdi_DriverSchedulingStatus(in, out, s)
}

func autoConvert_cdi_DriverSchedulingStatus_To_v1alpha1_DriverSchedulingStatus(in *cdi.DriverSchedulingStatus, out *v1alpha1.DriverSchedulingStatus, s conversion.Scope) error {
	out.SuitableNodes = (*v1.NodeSelector)(unsafe.Pointer(in.SuitableNodes))
	out.UnsuitableNodes = *(*[]string)(unsafe.Pointer(&in.UnsuitableNodes))
	return nil
}

// Convert_cdi_DriverSchedulingStatus_To_v1alpha1_DriverSchedulingStatus is an autogenerated conversion function.
func Convert_cdi_DriverSchedulingStatus_To_v1alpha1_DriverSchedulingStatus(in *cdi.DriverSchedulingStatus, out *v1alpha1.DriverSchedulingStatus, s conversion.Scope) error {
	return autoConvert_cdi_DriverSchedulingStatus_To_v1alpha1_DriverSchedulingStatus(in, out, s)
}

func autoConvert_v1alpha1_ResourceClaim_To_cdi_ResourceClaim(in *v1alpha1.ResourceClaim, out *cdi.ResourceClaim, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := corev1.Convert_v1_ResourceClaimSpec_To_core_ResourceClaimSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ResourceClaimStatus_To_cdi_ResourceClaimStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ResourceClaim_To_cdi_ResourceClaim is an autogenerated conversion function.
func Convert_v1alpha1_ResourceClaim_To_cdi_ResourceClaim(in *v1alpha1.ResourceClaim, out *cdi.ResourceClaim, s conversion.Scope) error {
	return autoConvert_v1alpha1_ResourceClaim_To_cdi_ResourceClaim(in, out, s)
}

func autoConvert_cdi_ResourceClaim_To_v1alpha1_ResourceClaim(in *cdi.ResourceClaim, out *v1alpha1.ResourceClaim, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := corev1.Convert_core_ResourceClaimSpec_To_v1_ResourceClaimSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_cdi_ResourceClaimStatus_To_v1alpha1_ResourceClaimStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_cdi_ResourceClaim_To_v1alpha1_ResourceClaim is an autogenerated conversion function.
func Convert_cdi_ResourceClaim_To_v1alpha1_ResourceClaim(in *cdi.ResourceClaim, out *v1alpha1.ResourceClaim, s conversion.Scope) error {
	return autoConvert_cdi_ResourceClaim_To_v1alpha1_ResourceClaim(in, out, s)
}

func autoConvert_v1alpha1_ResourceClaimList_To_cdi_ResourceClaimList(in *v1alpha1.ResourceClaimList, out *cdi.ResourceClaimList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]cdi.ResourceClaim, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ResourceClaim_To_cdi_ResourceClaim(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ResourceClaimList_To_cdi_ResourceClaimList is an autogenerated conversion function.
func Convert_v1alpha1_ResourceClaimList_To_cdi_ResourceClaimList(in *v1alpha1.ResourceClaimList, out *cdi.ResourceClaimList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ResourceClaimList_To_cdi_ResourceClaimList(in, out, s)
}

func autoConvert_cdi_ResourceClaimList_To_v1alpha1_ResourceClaimList(in *cdi.ResourceClaimList, out *v1alpha1.ResourceClaimList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha1.ResourceClaim, len(*in))
		for i := range *in {
			if err := Convert_cdi_ResourceClaim_To_v1alpha1_ResourceClaim(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_cdi_ResourceClaimList_To_v1alpha1_ResourceClaimList is an autogenerated conversion function.
func Convert_cdi_ResourceClaimList_To_v1alpha1_ResourceClaimList(in *cdi.ResourceClaimList, out *v1alpha1.ResourceClaimList, s conversion.Scope) error {
	return autoConvert_cdi_ResourceClaimList_To_v1alpha1_ResourceClaimList(in, out, s)
}

func autoConvert_v1alpha1_ResourceClaimStatus_To_cdi_ResourceClaimStatus(in *v1alpha1.ResourceClaimStatus, out *cdi.ResourceClaimStatus, s conversion.Scope) error {
	out.Phase = cdi.ResourceClaimPhase(in.Phase)
	out.DriverName = in.DriverName
	if err := Convert_v1alpha1_SchedulingStatus_To_cdi_SchedulingStatus(&in.Scheduling, &out.Scheduling, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_AllocationResult_To_cdi_AllocationResult(&in.Allocation, &out.Allocation, s); err != nil {
		return err
	}
	out.ReservedFor = *(*[]metav1.OwnerReference)(unsafe.Pointer(&in.ReservedFor))
	out.UsedOnNodes = *(*[]string)(unsafe.Pointer(&in.UsedOnNodes))
	return nil
}

// Convert_v1alpha1_ResourceClaimStatus_To_cdi_ResourceClaimStatus is an autogenerated conversion function.
func Convert_v1alpha1_ResourceClaimStatus_To_cdi_ResourceClaimStatus(in *v1alpha1.ResourceClaimStatus, out *cdi.ResourceClaimStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ResourceClaimStatus_To_cdi_ResourceClaimStatus(in, out, s)
}

func autoConvert_cdi_ResourceClaimStatus_To_v1alpha1_ResourceClaimStatus(in *cdi.ResourceClaimStatus, out *v1alpha1.ResourceClaimStatus, s conversion.Scope) error {
	out.Phase = v1alpha1.ResourceClaimPhase(in.Phase)
	out.DriverName = in.DriverName
	if err := Convert_cdi_SchedulingStatus_To_v1alpha1_SchedulingStatus(&in.Scheduling, &out.Scheduling, s); err != nil {
		return err
	}
	if err := Convert_cdi_AllocationResult_To_v1alpha1_AllocationResult(&in.Allocation, &out.Allocation, s); err != nil {
		return err
	}
	out.ReservedFor = *(*[]metav1.OwnerReference)(unsafe.Pointer(&in.ReservedFor))
	out.UsedOnNodes = *(*[]string)(unsafe.Pointer(&in.UsedOnNodes))
	return nil
}

// Convert_cdi_ResourceClaimStatus_To_v1alpha1_ResourceClaimStatus is an autogenerated conversion function.
func Convert_cdi_ResourceClaimStatus_To_v1alpha1_ResourceClaimStatus(in *cdi.ResourceClaimStatus, out *v1alpha1.ResourceClaimStatus, s conversion.Scope) error {
	return autoConvert_cdi_ResourceClaimStatus_To_v1alpha1_ResourceClaimStatus(in, out, s)
}

func autoConvert_v1alpha1_ResourceClass_To_cdi_ResourceClass(in *v1alpha1.ResourceClass, out *cdi.ResourceClass, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.DriverName = in.DriverName
	out.Parameters = in.Parameters
	return nil
}

// Convert_v1alpha1_ResourceClass_To_cdi_ResourceClass is an autogenerated conversion function.
func Convert_v1alpha1_ResourceClass_To_cdi_ResourceClass(in *v1alpha1.ResourceClass, out *cdi.ResourceClass, s conversion.Scope) error {
	return autoConvert_v1alpha1_ResourceClass_To_cdi_ResourceClass(in, out, s)
}

func autoConvert_cdi_ResourceClass_To_v1alpha1_ResourceClass(in *cdi.ResourceClass, out *v1alpha1.ResourceClass, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.DriverName = in.DriverName
	out.Parameters = in.Parameters
	return nil
}

// Convert_cdi_ResourceClass_To_v1alpha1_ResourceClass is an autogenerated conversion function.
func Convert_cdi_ResourceClass_To_v1alpha1_ResourceClass(in *cdi.ResourceClass, out *v1alpha1.ResourceClass, s conversion.Scope) error {
	return autoConvert_cdi_ResourceClass_To_v1alpha1_ResourceClass(in, out, s)
}

func autoConvert_v1alpha1_ResourceClassList_To_cdi_ResourceClassList(in *v1alpha1.ResourceClassList, out *cdi.ResourceClassList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]cdi.ResourceClass)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_ResourceClassList_To_cdi_ResourceClassList is an autogenerated conversion function.
func Convert_v1alpha1_ResourceClassList_To_cdi_ResourceClassList(in *v1alpha1.ResourceClassList, out *cdi.ResourceClassList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ResourceClassList_To_cdi_ResourceClassList(in, out, s)
}

func autoConvert_cdi_ResourceClassList_To_v1alpha1_ResourceClassList(in *cdi.ResourceClassList, out *v1alpha1.ResourceClassList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.ResourceClass)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_cdi_ResourceClassList_To_v1alpha1_ResourceClassList is an autogenerated conversion function.
func Convert_cdi_ResourceClassList_To_v1alpha1_ResourceClassList(in *cdi.ResourceClassList, out *v1alpha1.ResourceClassList, s conversion.Scope) error {
	return autoConvert_cdi_ResourceClassList_To_v1alpha1_ResourceClassList(in, out, s)
}

func autoConvert_v1alpha1_SchedulerSchedulingStatus_To_cdi_SchedulerSchedulingStatus(in *v1alpha1.SchedulerSchedulingStatus, out *cdi.SchedulerSchedulingStatus, s conversion.Scope) error {
	out.SelectedNode = in.SelectedNode
	out.PotentialNodes = *(*[]string)(unsafe.Pointer(&in.PotentialNodes))
	return nil
}

// Convert_v1alpha1_SchedulerSchedulingStatus_To_cdi_SchedulerSchedulingStatus is an autogenerated conversion function.
func Convert_v1alpha1_SchedulerSchedulingStatus_To_cdi_SchedulerSchedulingStatus(in *v1alpha1.SchedulerSchedulingStatus, out *cdi.SchedulerSchedulingStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_SchedulerSchedulingStatus_To_cdi_SchedulerSchedulingStatus(in, out, s)
}

func autoConvert_cdi_SchedulerSchedulingStatus_To_v1alpha1_SchedulerSchedulingStatus(in *cdi.SchedulerSchedulingStatus, out *v1alpha1.SchedulerSchedulingStatus, s conversion.Scope) error {
	out.SelectedNode = in.SelectedNode
	out.PotentialNodes = *(*[]string)(unsafe.Pointer(&in.PotentialNodes))
	return nil
}

// Convert_cdi_SchedulerSchedulingStatus_To_v1alpha1_SchedulerSchedulingStatus is an autogenerated conversion function.
func Convert_cdi_SchedulerSchedulingStatus_To_v1alpha1_SchedulerSchedulingStatus(in *cdi.SchedulerSchedulingStatus, out *v1alpha1.SchedulerSchedulingStatus, s conversion.Scope) error {
	return autoConvert_cdi_SchedulerSchedulingStatus_To_v1alpha1_SchedulerSchedulingStatus(in, out, s)
}

func autoConvert_v1alpha1_SchedulingStatus_To_cdi_SchedulingStatus(in *v1alpha1.SchedulingStatus, out *cdi.SchedulingStatus, s conversion.Scope) error {
	if err := Convert_v1alpha1_SchedulerSchedulingStatus_To_cdi_SchedulerSchedulingStatus(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_DriverSchedulingStatus_To_cdi_DriverSchedulingStatus(&in.Driver, &out.Driver, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_SchedulingStatus_To_cdi_SchedulingStatus is an autogenerated conversion function.
func Convert_v1alpha1_SchedulingStatus_To_cdi_SchedulingStatus(in *v1alpha1.SchedulingStatus, out *cdi.SchedulingStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_SchedulingStatus_To_cdi_SchedulingStatus(in, out, s)
}

func autoConvert_cdi_SchedulingStatus_To_v1alpha1_SchedulingStatus(in *cdi.SchedulingStatus, out *v1alpha1.SchedulingStatus, s conversion.Scope) error {
	if err := Convert_cdi_SchedulerSchedulingStatus_To_v1alpha1_SchedulerSchedulingStatus(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_cdi_DriverSchedulingStatus_To_v1alpha1_DriverSchedulingStatus(&in.Driver, &out.Driver, s); err != nil {
		return err
	}
	return nil
}

// Convert_cdi_SchedulingStatus_To_v1alpha1_SchedulingStatus is an autogenerated conversion function.
func Convert_cdi_SchedulingStatus_To_v1alpha1_SchedulingStatus(in *cdi.SchedulingStatus, out *v1alpha1.SchedulingStatus, s conversion.Scope) error {
	return autoConvert_cdi_SchedulingStatus_To_v1alpha1_SchedulingStatus(in, out, s)
}
